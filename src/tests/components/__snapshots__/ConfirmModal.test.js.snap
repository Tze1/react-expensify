// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render properly with default prop values 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="confirmmodal component"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    className="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      className="modal-title"
      componentClass="h4"
    >
      Confirm
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    className="modal-body"
    componentClass="div"
  >
    <p
      className="modal-message"
    >
      Are you sure you want to do this?
    </p>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    className="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="modal-cancel button exit"
      disabled={false}
      onClick={[Function]}
    >
      Cancel
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="modal-ok button danger"
      disabled={false}
      onClick={[Function]}
    >
      OK
    </Button>
  </ModalFooter>
</Modal>
`;

exports[`Should render properly with optional prop values 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="confirmmodal component"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    className="modal-header"
    closeButton={false}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      className="modal-title"
      componentClass="h4"
    >
      test
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    className="modal-body"
    componentClass="div"
  >
    <p
      className="modal-message"
    >
      Are you sure you want to do this?
    </p>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    className="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="modal-cancel button exit"
      disabled={false}
      onClick={[Function]}
    >
      no
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="modal-ok button danger"
      disabled={false}
      onClick={[Function]}
    >
      yes
    </Button>
  </ModalFooter>
</Modal>
`;
